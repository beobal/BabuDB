# optional debug level (
# 0 = emergency, 
# 1 = alert, 
# 2 = critical, 
# 3 = error, 
# 4 = warning, 
# 5 = notice, 
# 6 = info, 
# 7 = debug)
babudb.debug.level = 4

# optional debug category
babudb.debug.category = all

# base directory to store database index snapshots in
babudb.baseDir = /tmp/babudb/database

# directory in which the database logs are stored
babudb.logDir = /tmp/babudb/db-log

# SyncMode the synchronization mode to use for the logFile
# ASYNC - asynchronously write log entries (data is lost when system crashes).
# FSYNC - executes an fsync on the logfile before acknowledging the operation.
# FDATASYNC
# SYNC_WRITE - synchronously writes the log entry to disk before ack. Does not
#			   update the metadata.
# SYNC_WRITE_METADATA - synchronously writes the log entry to disk and updates
#			   			the metadata before ack.
babudb.sync = ASYNC

# max queue length: if > 0, the queue for each worker is limited to maxQ
babudb.worker.maxQueueLength = 1000

# number of worker threads to use
babudb.worker.numThreads = 0

# a checkpoint is generated ,if maxLogfileSize is exceeded
babudb.maxLogfileSize = 16777216

# interval between two checks in seconds, 0 disables auto checkPointing
babudb.checkInterval = 300

# if set to a value > 0, operations are acknowledged immediately before
# they are written to the disk log. The disk logger will do batch writes
# and call fSync... every pseudoSyncWait seconds. This can be used to
# increase performance and emulate PostgreSQL behavior.
babudb.pseudoSyncWait = 0

# flag that determines whether the indices shall be compressed or not.
babudb.compression = false

# maximum number of key-value pairs per block
babudb.maxNumRecordsPerBlock = 64

# maximum size for a babudb on-disk index file
babudb.maxBlockFileSize = 52428800

######################################################################
## BabuDB replication configuration								   	#
######################################################################

## local time renew in milliseconds
babudb.localTimeRenew = 3000

## specifies if the DBs should be modified optimistic.
## if you want to use the replication with a pseudoSyncWait > 0 set
## this flag true to increase performance and lose data integrity.
## if pseudoSyncWait is set to 0 it is highly recommended to leave this
## flag false.
babudb.repl.optimistic = false

## specify whether SSL is required
babudb.ssl.enabled = false

## server credentials for SSL handshakes
#babudb.ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/dir.p12
#babudb.ssl.service_creds.pw = xtreemfs
#babudb.ssl.service_creds.container = pkcs12

## trusted certificates for SSL handshakes
#babudb.ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/xosrootca.jks
#babudb.ssl.trusted_certs.pw = xtreemfs
#babudb.ssl.trusted_certs.container = jks

##babudb.ssl.authenticationWithoutEncryption = false

## number of slaves that at least have to be up to date
babudb.repl.sync.n = 0

## participants of the replication including the local address
#babudb.repl.participant.0 = local.host.com
#babudb.repl.participant.0.port = 35667
#babudb.repl.participant.1 = other.host.com
#babudb.repl.participant.1.port = 35666

## chunk size, for initial load of file chunks
babudb.repl.chunkSize = 5242880

## DB backup directory - needed for the initial loading of the BabuDB from the 
## master in replication context.
babudb.repl.backupDir = /tmp/babudb/backup/